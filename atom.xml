<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>MalBox</title>
  <icon>https://www.gravatar.com/avatar/c560a5a78471cf197d208892027b5952</icon>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://0xomochi.github.io/"/>
  <updated>2018-09-10T06:49:25.073Z</updated>
  <id>http://0xomochi.github.io/</id>
  
  <author>
    <name>0xomochi</name>
    <email>yume@sfc.wide.ad.jp</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>PowerShell~入門~</title>
    <link href="http://0xomochi.github.io/2018/09/10/PowerShell/"/>
    <id>http://0xomochi.github.io/2018/09/10/PowerShell/</id>
    <published>2018-09-10T06:12:56.000Z</published>
    <updated>2018-09-10T06:49:25.073Z</updated>
    
    <content type="html"><![CDATA[<h2 id="PowerShellのインストール-for-mac"><a href="#PowerShellのインストール-for-mac" class="headerlink" title="PowerShellのインストール(for mac)"></a>PowerShellのインストール(for mac)</h2><p>Windows, Linuxその他へのインストールについては他を参照されたし<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">// Homebrew-Caskのインストール</span><br><span class="line">$ brew tap caskroom/cask</span><br><span class="line"></span><br><span class="line">// Homebrew-CaskからPowerShellをインストール</span><br><span class="line">$ brew cask install powershell</span><br><span class="line"></span><br><span class="line">// PowerShellのバージョン確認</span><br><span class="line">$ pwsh -V</span><br><span class="line">PowerShell v6.0.4</span><br><span class="line"></span><br><span class="line">// PowerShellのアプデートの時は</span><br><span class="line">$ brew update</span><br><span class="line">$ brew cask upgrade powershell</span><br></pre></td></tr></table></figure></p><h2 id="PowerShellの起動"><a href="#PowerShellの起動" class="headerlink" title="PowerShellの起動"></a>PowerShellの起動</h2><p>terminalでこれを打ち込むだけ<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ pwsh</span><br><span class="line">PowerShell v6.0.4</span><br><span class="line">Copyright (c) Microsoft Corporation. All rights reserved.</span><br><span class="line"></span><br><span class="line">https://aka.ms/pscore6-docs</span><br><span class="line">Type &apos;help&apos; to get help.</span><br><span class="line"></span><br><span class="line">PS &gt;</span><br></pre></td></tr></table></figure></p><h2 id="PowerShellを触ってみる"><a href="#PowerShellを触ってみる" class="headerlink" title="PowerShellを触ってみる"></a>PowerShellを触ってみる</h2><p>PowerShellは大文字小文字を区別しないので<code>$PSV</code> + tab でも<code>$psv</code> + tab でも<code>$PSVersionTable</code>と補完される<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">PS &gt; $PSVersionTable</span><br><span class="line"></span><br><span class="line">Name                           Value</span><br><span class="line">----                           -----</span><br><span class="line">PSVersion                      6.0.4</span><br><span class="line">PSEdition                      Core</span><br><span class="line">GitCommitId                    v6.0.4</span><br><span class="line">OS                             Darwin 17.7.0 Darwin Kernel Version 17.7.0: Thu Jun 21 22:53:14 PDT...</span><br><span class="line">Platform                       Unix</span><br><span class="line">PSCompatibleVersions           &#123;1.0, 2.0, 3.0, 4.0...&#125;</span><br><span class="line">PSRemotingProtocolVersion      2.3</span><br><span class="line">SerializationVersion           1.1.0.1</span><br><span class="line">WSManStackVersion              3.0</span><br></pre></td></tr></table></figure></p><p>出力内容を一時保存しておく<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">PS &gt; $ver = $PSVersionTable</span><br><span class="line">PS &gt; $ver</span><br><span class="line"></span><br><span class="line">Name                           Value</span><br><span class="line">----                           -----</span><br><span class="line">PSVersion                      6.0.4</span><br><span class="line">PSEdition                      Core</span><br><span class="line">GitCommitId                    v6.0.4</span><br><span class="line">OS                             Darwin 17.7.0 Darwin Kernel Version 17.7.0: Thu Jun 21 22:53:14 PDT...</span><br><span class="line">Platform                       Unix</span><br><span class="line">PSCompatibleVersions           &#123;1.0, 2.0, 3.0, 4.0...&#125;</span><br><span class="line">PSRemotingProtocolVersion      2.3</span><br><span class="line">SerializationVersion           1.1.0.1</span><br><span class="line">WSManStackVersion              3.0</span><br></pre></td></tr></table></figure></p><p>PowerShellのexit<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PS &gt; exit</span><br><span class="line">// あるいはCtr+D</span><br></pre></td></tr></table></figure></p><h3 id="Cmdlet-コマンドレット"><a href="#Cmdlet-コマンドレット" class="headerlink" title="Cmdlet(コマンドレット)"></a>Cmdlet(コマンドレット)</h3><p>lsコマンドと同じようなもの(PowerShellではCmdletと呼んでいるだけ)<br>Cmdletは<code>[Verb]-[Nown]</code>の形になっている<br>例: <code>Get-Content</code>, <code>Set-Location</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">// Get-ChildItemはPowerShellを開いているディレクトリにあるファイルとディレクトリの一覧を表示するCmdlet(= ls)</span><br><span class="line">PS &gt; Get-ChildItem</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    Directory: /Users/omochi</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Mode                LastWriteTime         Length Name</span><br><span class="line">----                -------------         ------ ----</span><br><span class="line">d-----       2018/08/24      1:08                Applications</span><br><span class="line">d-----       2018/09/10     15:11                Desktop</span><br><span class="line">d-----       2018/09/05     10:36                Documents</span><br><span class="line">d-----       2018/09/09     21:03                Downloads</span><br><span class="line">d-----       2018/09/09     18:10                Library</span><br><span class="line">d-----       2018/08/24      0:07                Movies</span><br><span class="line">d-----       2018/08/24      0:07                Music</span><br><span class="line">d-----       2018/08/24      0:07                Pictures</span><br><span class="line">d-----       2018/08/24      0:07                Public</span><br></pre></td></tr></table></figure></p><h3 id="シンタックスハイライト"><a href="#シンタックスハイライト" class="headerlink" title="シンタックスハイライト"></a>シンタックスハイライト</h3><p>PowerShellコンソール上では変数、コマンド、数字がデフォルトで色付けされていて可愛い  </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;PowerShellのインストール-for-mac&quot;&gt;&lt;a href=&quot;#PowerShellのインストール-for-mac&quot; class=&quot;headerlink&quot; title=&quot;PowerShellのインストール(for mac)&quot;&gt;&lt;/a&gt;PowerShell
      
    
    </summary>
    
      <category term="PowerShell" scheme="http://0xomochi.github.io/categories/PowerShell/"/>
    
      <category term="beginner" scheme="http://0xomochi.github.io/categories/PowerShell/beginner/"/>
    
    
      <category term="PowerShell" scheme="http://0xomochi.github.io/tags/PowerShell/"/>
    
  </entry>
  
  <entry>
    <title>References malware編</title>
    <link href="http://0xomochi.github.io/2018/09/08/%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE-malware%E7%B7%A8/"/>
    <id>http://0xomochi.github.io/2018/09/08/参考文献-malware編/</id>
    <published>2018-09-08T14:19:45.000Z</published>
    <updated>2018-09-08T14:48:37.282Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Website"><a href="#Website" class="headerlink" title="Website"></a>Website</h3><p>・<a href="http://www.malware-traffic-analysis.net/" target="_blank" rel="noopener">Malware Traffic Analysis.net</a><br>・<a href="http://blog.netlab.360.com/" target="_blank" rel="noopener">Network Security Research Lab at 360</a><br>・<a href="https://blog.ensilo.com/" target="_blank" rel="noopener">ENSILO BLOG</a><br>・<a href="https://www.lastline.com/labs/blog/" target="_blank" rel="noopener">Lastline Labs Blog</a><br>・<a href="http://www.broadanalysis.com/" target="_blank" rel="noopener">BROADANALYSIS</a><br>・<a href="https://malwarebreakdown.com/" target="_blank" rel="noopener">Malware Breakdown</a><br>・<a href="https://zerophagemalware.com/" target="_blank" rel="noopener">Zerophage Malware</a><br>・<a href="https://blogs.yahoo.co.jp/fireflyframer" target="_blank" rel="noopener">無題な濃いログ</a>  </p><h3 id="Twitter"><a href="#Twitter" class="headerlink" title="Twitter"></a>Twitter</h3><p>・<a href="https://twitter.com/piyokango" target="_blank" rel="noopener">@piyokango</a><br>・<br>・<br>・</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Website&quot;&gt;&lt;a href=&quot;#Website&quot; class=&quot;headerlink&quot; title=&quot;Website&quot;&gt;&lt;/a&gt;Website&lt;/h3&gt;&lt;p&gt;・&lt;a href=&quot;http://www.malware-traffic-analysis.net/
      
    
    </summary>
    
      <category term="references" scheme="http://0xomochi.github.io/categories/references/"/>
    
      <category term="malware" scheme="http://0xomochi.github.io/categories/references/malware/"/>
    
    
      <category term="references" scheme="http://0xomochi.github.io/tags/references/"/>
    
      <category term="malware" scheme="http://0xomochi.github.io/tags/malware/"/>
    
  </entry>
  
  <entry>
    <title>wiresharkの使い方</title>
    <link href="http://0xomochi.github.io/2018/09/08/wireshark/"/>
    <id>http://0xomochi.github.io/2018/09/08/wireshark/</id>
    <published>2018-09-08T14:01:44.000Z</published>
    <updated>2018-09-08T14:12:03.478Z</updated>
    
    <content type="html"><![CDATA[<h1 id="tshark"><a href="#tshark" class="headerlink" title="tshark"></a>tshark</h1><p>GUI likeなwiresharkのCLIバージョン<br>tsharkのインストール方法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ brew cask install wireshark</span><br><span class="line">$ tshark -v</span><br></pre></td></tr></table></figure></p><h3 id="tsharkのオプション一覧"><a href="#tsharkのオプション一覧" class="headerlink" title="tsharkのオプション一覧"></a>tsharkのオプション一覧</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line">Usage: tshark [options] ...</span><br><span class="line"></span><br><span class="line">Capture interface:</span><br><span class="line">  -i &lt;interface&gt;           name or idx of interface (def: first non-loopback)</span><br><span class="line">  -f &lt;capture filter&gt;      packet filter in libpcap filter syntax</span><br><span class="line">  -s &lt;snaplen&gt;             packet snapshot length (def: appropriate maximum)</span><br><span class="line">  -p                       don&apos;t capture in promiscuous mode</span><br><span class="line">  -I                       capture in monitor mode, if available</span><br><span class="line">  -B &lt;buffer size&gt;         size of kernel buffer (def: 2MB)</span><br><span class="line">  -y &lt;link type&gt;           link layer type (def: first appropriate)</span><br><span class="line">  --time-stamp-type &lt;type&gt; timestamp method for interface</span><br><span class="line">  -D                       print list of interfaces and exit</span><br><span class="line">  -L                       print list of link-layer types of iface and exit</span><br><span class="line">  --list-time-stamp-types  print list of timestamp types for iface and exit</span><br><span class="line"></span><br><span class="line">Capture stop conditions:</span><br><span class="line">  -c &lt;packet count&gt;        stop after n packets (def: infinite)</span><br><span class="line">  -a &lt;autostop cond.&gt; ...  duration:NUM - stop after NUM seconds</span><br><span class="line">                           filesize:NUM - stop this file after NUM KB</span><br><span class="line">                              files:NUM - stop after NUM files</span><br><span class="line">Capture output:</span><br><span class="line">  -b &lt;ringbuffer opt.&gt; ... duration:NUM - switch to next file after NUM secs</span><br><span class="line">                           interval:NUM - create time intervals of NUM secs</span><br><span class="line">                           filesize:NUM - switch to next file after NUM KB</span><br><span class="line">                              files:NUM - ringbuffer: replace after NUM files</span><br><span class="line">Input file:</span><br><span class="line">  -r &lt;infile&gt;              set the filename to read from (- to read from stdin)</span><br><span class="line"></span><br><span class="line">Processing:</span><br><span class="line">  -2                       perform a two-pass analysis</span><br><span class="line">  -M &lt;packet count&gt;        perform session auto reset</span><br><span class="line">  -R &lt;read filter&gt;         packet Read filter in Wireshark display filter syntax</span><br><span class="line">                           (requires -2)</span><br><span class="line">  -Y &lt;display filter&gt;      packet displaY filter in Wireshark display filter</span><br><span class="line">                           syntax</span><br><span class="line">  -n                       disable all name resolutions (def: all enabled)</span><br><span class="line">  -N &lt;name resolve flags&gt;  enable specific name resolution(s): &quot;mnNtCd&quot;</span><br><span class="line">  -d &lt;layer_type&gt;==&lt;selector&gt;,&lt;decode_as_protocol&gt; ...</span><br><span class="line">                           &quot;Decode As&quot;, see the man page for details</span><br><span class="line">                           Example: tcp.port==8888,http</span><br><span class="line">  -H &lt;hosts file&gt;          read a list of entries from a hosts file, which will</span><br><span class="line">                           then be written to a capture file. (Implies -W n)</span><br><span class="line">  --enable-protocol &lt;proto_name&gt;</span><br><span class="line">                           enable dissection of proto_name</span><br><span class="line">  --disable-protocol &lt;proto_name&gt;</span><br><span class="line">                           disable dissection of proto_name</span><br><span class="line">  --enable-heuristic &lt;short_name&gt;</span><br><span class="line">                           enable dissection of heuristic protocol</span><br><span class="line">  --disable-heuristic &lt;short_name&gt;</span><br><span class="line">                           disable dissection of heuristic protocol</span><br><span class="line">Output:</span><br><span class="line">  -w &lt;outfile|-&gt;           write packets to a pcap-format file named &quot;outfile&quot;</span><br><span class="line">                           (or to the standard output for &quot;-&quot;)</span><br><span class="line">  -C &lt;config profile&gt;      start with specified configuration profile</span><br><span class="line">  -F &lt;output file type&gt;    set the output file type, default is pcapng</span><br><span class="line">                           an empty &quot;-F&quot; option will list the file types</span><br><span class="line">  -V                       add output of packet tree        (Packet Details)</span><br><span class="line">  -O &lt;protocols&gt;           Only show packet details of these protocols, comma</span><br><span class="line">                           separated</span><br><span class="line">  -P                       print packet summary even when writing to a file</span><br><span class="line">  -S &lt;separator&gt;           the line separator to print between packets</span><br><span class="line">  -x                       add output of hex and ASCII dump (Packet Bytes)</span><br><span class="line">  -T pdml|ps|psml|json|jsonraw|ek|tabs|text|fields|?</span><br><span class="line">                           format of text output (def: text)</span><br><span class="line">  -j &lt;protocolfilter&gt;      protocols layers filter if -T ek|pdml|json selected</span><br><span class="line">                           (e.g. &quot;ip ip.flags text&quot;, filter does not expand child</span><br><span class="line">                           nodes, unless child is specified also in the filter)</span><br><span class="line">  -J &lt;protocolfilter&gt;      top level protocol filter if -T ek|pdml|json selected</span><br><span class="line">                           (e.g. &quot;http tcp&quot;, filter which expands all child nodes)</span><br><span class="line">  -e &lt;field&gt;               field to print if -Tfields selected (e.g. tcp.port,</span><br><span class="line">                           _ws.col.Info)</span><br><span class="line">                           this option can be repeated to print multiple fields</span><br><span class="line">  -E&lt;fieldsoption&gt;=&lt;value&gt; set options for output when -Tfields selected:</span><br><span class="line">     bom=y|n               print a UTF-8 BOM</span><br><span class="line">     header=y|n            switch headers on and off</span><br><span class="line">     separator=/t|/s|&lt;char&gt; select tab, space, printable character as separator</span><br><span class="line">     occurrence=f|l|a      print first, last or all occurrences of each field</span><br><span class="line">     aggregator=,|/s|&lt;char&gt; select comma, space, printable character as</span><br><span class="line">                           aggregator</span><br><span class="line">     quote=d|s|n           select double, single, no quotes for values</span><br><span class="line">  -t a|ad|d|dd|e|r|u|ud|?  output format of time stamps (def: r: rel. to first)</span><br><span class="line">  -u s|hms                 output format of seconds (def: s: seconds)</span><br><span class="line">  -l                       flush standard output after each packet</span><br><span class="line">  -q                       be more quiet on stdout (e.g. when using statistics)</span><br><span class="line">  -Q                       only log true errors to stderr (quieter than -q)</span><br><span class="line">  -g                       enable group read access on the output file(s)</span><br><span class="line">  -W n                     Save extra information in the file, if supported.</span><br><span class="line">                           n = write network address resolution information</span><br><span class="line">  -X &lt;key&gt;:&lt;value&gt;         eXtension options, see the man page for details</span><br><span class="line">  -U tap_name              PDUs export mode, see the man page for details</span><br><span class="line">  -z &lt;statistics&gt;          various statistics, see the man page for details</span><br><span class="line">  --capture-comment &lt;comment&gt;</span><br><span class="line">                           add a capture comment to the newly created</span><br><span class="line">                           output file (only for pcapng)</span><br><span class="line">  --export-objects &lt;protocol&gt;,&lt;destdir&gt; save exported objects for a protocol to</span><br><span class="line">                           a directory named &quot;destdir&quot;</span><br><span class="line">  --color                  color output text similarly to the Wireshark GUI,</span><br><span class="line">                           requires a terminal with 24-bit color support</span><br><span class="line">                           Also supplies color attributes to pdml and psml formats</span><br><span class="line">                           (Note that attributes are nonstandard)</span><br><span class="line">  --no-duplicate-keys      If -T json is specified, merge duplicate keys in an object</span><br><span class="line">                           into a single key with as value a json array containing all</span><br><span class="line">                           values</span><br><span class="line">Miscellaneous:</span><br><span class="line">  -h                       display this help and exit</span><br><span class="line">  -v                       display version info and exit</span><br><span class="line">  -o &lt;name&gt;:&lt;value&gt; ...    override preference setting</span><br><span class="line">  -K &lt;keytab&gt;              keytab file to use for kerberos decryption</span><br><span class="line">  -G [report]              dump one of several available reports and exit</span><br><span class="line">                           default report=&quot;fields&quot;</span><br><span class="line">                           use &quot;-G help&quot; for more help</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;tshark&quot;&gt;&lt;a href=&quot;#tshark&quot; class=&quot;headerlink&quot; title=&quot;tshark&quot;&gt;&lt;/a&gt;tshark&lt;/h1&gt;&lt;p&gt;GUI likeなwiresharkのCLIバージョン&lt;br&gt;tsharkのインストール方法&lt;br&gt;&lt;fig
      
    
    </summary>
    
      <category term="tool" scheme="http://0xomochi.github.io/categories/tool/"/>
    
      <category term="wireshark" scheme="http://0xomochi.github.io/categories/tool/wireshark/"/>
    
    
      <category term="wireshark" scheme="http://0xomochi.github.io/tags/wireshark/"/>
    
      <category term="packet" scheme="http://0xomochi.github.io/tags/packet/"/>
    
  </entry>
  
  <entry>
    <title>hexo blogをデプロイするまで</title>
    <link href="http://0xomochi.github.io/2018/09/07/hexo-blog%E3%82%92%E3%83%87%E3%83%97%E3%83%AD%E3%82%A4%E3%81%99%E3%82%8B%E3%81%BE%E3%81%A7/"/>
    <id>http://0xomochi.github.io/2018/09/07/hexo-blogをデプロイするまで/</id>
    <published>2018-09-07T01:49:46.000Z</published>
    <updated>2018-09-08T14:14:07.262Z</updated>
    
    <content type="html"><![CDATA[<h2 id="モチベーション"><a href="#モチベーション" class="headerlink" title="モチベーション"></a>モチベーション</h2><p>・<a href="https://qiita.com/okmttdhr/items/82ecb0332835472e905f#hexojavascriptgithub-star-4204" target="_blank" rel="noopener">静的サイトジェネレーター</a>でブログを作りたい<br>・ブログ構築しつつGitHubで差分管理しておきたい -&gt; <a href="https://pages.github.com/" target="_blank" rel="noopener">GitHub Pages</a>  </p><h2 id="環境"><a href="#環境" class="headerlink" title="環境"></a>環境</h2><p>MacOS High Sierra 10.13.6<br>homebrewインストール済み(<a href="https://brew.sh/index_ja" target="_blank" rel="noopener">homebrewのインストールについて</a>)  </p><h2 id="手順"><a href="#手順" class="headerlink" title="手順"></a>手順</h2><p>かなり雑に書いているので参考サイト参照  </p><h3 id="Github-Pages用のリポジトリを作る"><a href="#Github-Pages用のリポジトリを作る" class="headerlink" title="Github Pages用のリポジトリを作る"></a>Github Pages用のリポジトリを作る</h3><p>自分のGitHubにアクセスし、新しいリポジトリを作成<br>リポジトリ名は”&lt;replace_username&gt;.github.io”にする<br>ブログのurlが”https://&lt;replace_username&gt;.github.io”になる  </p><h3 id="Homebrewでnodebrewをインストール"><a href="#Homebrewでnodebrewをインストール" class="headerlink" title="Homebrewでnodebrewをインストール"></a>Homebrewでnodebrewをインストール</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew install node brew</span><br></pre></td></tr></table></figure><p>.bash_profileに追記して.bash_profileを再読み込み<br>pathの指定でミスってvimなどの主要コマンドが使えなくなった場合<br>-&gt; <a href="https://yunabe.hatenablog.com/entry/2017/02/11/134355" target="_blank" rel="noopener">対処</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ source ~/.bash_profile</span><br></pre></td></tr></table></figure></p><p>node.js(最新版)をインストールする<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$ nodebrew install-binary latest</span><br><span class="line">Fetching: https://nodejs.org/dist/v10.10.0/node-v10.10.0-darwin-x64.tar.gz</span><br><span class="line">######################################################################## 100.0%</span><br><span class="line">Installed successfully</span><br><span class="line"></span><br><span class="line">$ nodebrew list</span><br><span class="line">v10.10.0</span><br><span class="line"></span><br><span class="line">current: none</span><br><span class="line"></span><br><span class="line">$ nodebrew use v10.10.0</span><br><span class="line">$ nodebrew list</span><br><span class="line">v10.10.0</span><br><span class="line"></span><br><span class="line">current: v10.10.0</span><br><span class="line"></span><br><span class="line">$ npm -v</span><br><span class="line">6.2.0</span><br></pre></td></tr></table></figure></p><p>“$ nodebrew install-binary latest”がうまくいかなかった時は<br>-&gt; <a href="https://qiita.com/yn01/items/d1fa10dbe4850f7cd693" target="_blank" rel="noopener">対処法</a><br>これでもうまくいかない場合は上記コマンドにsudoをつけて実行  </p><h3 id="hexoとデプロイツールを導入"><a href="#hexoとデプロイツールを導入" class="headerlink" title="hexoとデプロイツールを導入"></a>hexoとデプロイツールを導入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo</span><br><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><h3 id="デプロイ"><a href="#デプロイ" class="headerlink" title="デプロイ"></a>デプロイ</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir myblog</span><br><span class="line">$ cd myblog</span><br><span class="line">$ hexo init</span><br><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>これでlocalhost:4000でデプロイしたページが見れる<br>ctr+Cで終了  </p><h3 id="config-ymlの修正"><a href="#config-ymlの修正" class="headerlink" title="_config.ymlの修正"></a>_config.ymlの修正</h3><p>themeによって変化するので割愛<a href="https://qiita.com/wawawa/items/1a2f174fb29c35302543" target="_blank" rel="noopener">参考</a>  </p><h3 id="好みのThemeを探す"><a href="#好みのThemeを探す" class="headerlink" title="好みのThemeを探す"></a>好みのThemeを探す</h3><p>・<a href="https://hexo.io/themes/" target="_blank" rel="noopener">hexo themes 公式</a><br>・<a href="https://github.com/hexojs/hexo/wiki/Themes" target="_blank" rel="noopener">hexo themes wiki</a><br>・本ブログで使っているtheme -&gt; <a href="https://github.com/sabrinaluo/hexo-theme-replica" target="_blank" rel="noopener">sabrinaluo/hexo-theme-replica</a>  </p><h3 id="デプロイする"><a href="#デプロイする" class="headerlink" title="デプロイする"></a>デプロイする</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git init</span><br><span class="line">$ git remote add origin git@github.com:&lt;replace_username&gt;/&lt;replace_username&gt;.github.io.git</span><br><span class="line">$ hexo deploy -g</span><br></pre></td></tr></table></figure><p>これで”https://&lt;replace_username&gt;.github.io”にアクセスしてブログが見れればdone<br>新しい記事を作る手順は本ブログの<a href="https://0xomochi.github.io/2018/09/07/hello-world/">Hello World</a>にある  </p><h3 id="postの削除方法"><a href="#postの削除方法" class="headerlink" title="postの削除方法"></a>postの削除方法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ rm &lt;your_dir&gt;/source/_posts/&lt;your_post.md&gt;</span><br><span class="line">$ hexo clean</span><br><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><h3 id="categoriesとtagsの404解消"><a href="#categoriesとtagsの404解消" class="headerlink" title="categoriesとtagsの404解消"></a>categoriesとtagsの404解消</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new page categories</span><br><span class="line">$ hexo new page tags</span><br></pre></td></tr></table></figure><h2 id="参考にしたサイト"><a href="#参考にしたサイト" class="headerlink" title="参考にしたサイト"></a>参考にしたサイト</h2><p><a href="https://qiita.com/in_silico_/items/7e6ed639c24142bdbd04" target="_blank" rel="noopener">Hexoで始めるお手軽な静的ブログ　-インストールと配備-</a><br><a href="https://tech.qookie.jp/posts/hexo-deploy-github-pages-fast/" target="_blank" rel="noopener">HexoブログをGitHub Pagesで最速公開する</a><br><a href="https://qiita.com/f_prg/items/d10a77b1e356a46d9ab9" target="_blank" rel="noopener">Hexoでgithubにデプロイする</a><br><a href="https://qiita.com/jhChoi/items/85f3b5ba39619bc47f4d" target="_blank" rel="noopener">【Hexo入門】Hexoでブログを作成する時のTipsまとめ</a><br><a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">Troubleshooting</a><br><a href="https://qiita.com/wawawa/items/1a2f174fb29c35302543" target="_blank" rel="noopener">Hexoを使って個人ブログ作成, Github Pagesにデプロイするまで</a><br><a href="https://tech.qookie.jp/posts/hexo-frontmatter-category-tag/" target="_blank" rel="noopener">HexoのFront-matterにカテゴリーとタグを上手く設定する方法</a><br><a href="https://teratail.com/questions/24309" target="_blank" rel="noopener">nodebrew ls でエラーになります。</a><br><a href="https://qiita.com/suisuina/items/c5c4e4b9f55a8615a542" target="_blank" rel="noopener">nodebrewでよく使うコマンド</a><br><a href="http://zaki3.hateblo.jp/entry/2018/03/21/111738" target="_blank" rel="noopener">おれろぐ #z_a_ki3/node.jsの環境構築（mac）</a><br><a href="http://sabrinaluo.github.io/tech/" target="_blank" rel="noopener">小白妹妹写代码</a>  </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;モチベーション&quot;&gt;&lt;a href=&quot;#モチベーション&quot; class=&quot;headerlink&quot; title=&quot;モチベーション&quot;&gt;&lt;/a&gt;モチベーション&lt;/h2&gt;&lt;p&gt;・&lt;a href=&quot;https://qiita.com/okmttdhr/items/82ecb03
      
    
    </summary>
    
      <category term="hexo" scheme="http://0xomochi.github.io/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://0xomochi.github.io/tags/hexo/"/>
    
      <category term="blog" scheme="http://0xomochi.github.io/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>whoami</title>
    <link href="http://0xomochi.github.io/2018/09/07/whoami/"/>
    <id>http://0xomochi.github.io/2018/09/07/whoami/</id>
    <published>2018-09-07T01:47:14.000Z</published>
    <updated>2018-11-05T04:49:49.627Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hi-I’m-omochi"><a href="#Hi-I’m-omochi" class="headerlink" title="Hi, I’m omochi!"></a>Hi, I’m omochi!</h1><p><img src="https://github.com/0xomochi/images/blob/master/blog/IMG_2297.JPG?raw=true =200x" alt="profile"></p><h3 id="EVENTS"><a href="#EVENTS" class="headerlink" title="EVENTS"></a>EVENTS</h3><h5 id="Security-Camp"><a href="#Security-Camp" class="headerlink" title="Security Camp"></a>Security Camp</h5><ul><li><a href="https://www.ipa.go.jp/jinzai/camp/2017/zenkoku2017.html" target="_blank" rel="noopener">セキュリティ・キャンプ全国大会 2017</a>参加者  </li><li><a href="https://www.ipa.go.jp/jinzai/camp/2018/zenkoku2018_index.html" target="_blank" rel="noopener">セキュリティ・キャンプ全国大会 2018</a>チューター  </li></ul><h5 id="CODEBLUE"><a href="#CODEBLUE" class="headerlink" title="CODEBLUE"></a>CODEBLUE</h5><ul><li><a href="https://codeblue.jp/2017/" target="_blank" rel="noopener">CODEBLUE 2017</a>学生スタッフ  </li><li><a href="https://codeblue.jp/2018/" target="_blank" rel="noopener">CODEBLUE 2018</a>学生スタッフ(speaker attend)  </li></ul><h5 id="AVTOKYO"><a href="#AVTOKYO" class="headerlink" title="AVTOKYO"></a>AVTOKYO</h5><ul><li><a href="http://ja.avtokyo.org/avtokyo2017" target="_blank" rel="noopener">AVTOKYO 2017</a></li><li><a href="http://ja.avtokyo.org/avtokyo2018" target="_blank" rel="noopener">AVTOKYO 2018</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Hi-I’m-omochi&quot;&gt;&lt;a href=&quot;#Hi-I’m-omochi&quot; class=&quot;headerlink&quot; title=&quot;Hi, I’m omochi!&quot;&gt;&lt;/a&gt;Hi, I’m omochi!&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://gith
      
    
    </summary>
    
      <category term="bio" scheme="http://0xomochi.github.io/categories/bio/"/>
    
    
      <category term="whoami" scheme="http://0xomochi.github.io/tags/whoami/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://0xomochi.github.io/2018/09/07/hello-world/"/>
    <id>http://0xomochi.github.io/2018/09/07/hello-world/</id>
    <published>2018-09-06T16:32:25.936Z</published>
    <updated>2018-09-06T16:32:25.936Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
